
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      source: ${{ steps.filter.outputs.source }}
      docs: ${{ steps.filter.outputs.docs }}
      stubs: ${{ steps.filter.outputs.stubs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Detect file changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            source:
              - 'autocv/**'
              - 'pipelines/**'
              - 'tests/**'
              - 'pyproject.toml'
              - 'uv.lock'
            docs:
              - 'docs/**'
              - 'public/docs/**'
            stubs:
              - 'autocv/**/*.py'
              - 'autocv/**/*.pyi'
              - 'pipelines/mypy.nox.py'
              - 'pyproject.toml'

  test:
    needs: [changes]
    if: ${{ needs.changes.outputs.source == 'true' || github.event_name != 'pull_request' }}
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", 3.11, 3.12, 3.13 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup uv
        uses: astral-sh/setup-uv@v7
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: true
          enable-cache: true
          prune-cache: false

      - name: Test Installation
        run: |
          uv pip install .
          uv pip uninstall autocv

      - name: Run tests
        run: |
          uv sync --frozen --only-group nox

          nox -s pytest -- --coverage

          python scripts/ci/normalize_coverage.py

      - name: Upload coverage
        uses: actions/upload-artifact@v5
        with:
          name: .coverage.${{ matrix.os }}.${{ matrix.python-version }}
          path: .coverage
          retention-days: 1
          if-no-files-found: error
          include-hidden-files: true

  upload-coverage:
    needs: [changes, test]
    if: ${{ needs.test.result == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup uv
        uses: astral-sh/setup-uv@v7
        with:
          python-version: "3.10"
          activate-environment: true
          enable-cache: true

      - name: Download coverage
        uses: actions/download-artifact@v5
        with:
          path: coverages/
          # Not specifying any name will lead to the download of all available artifacts

      - name: Extract individual coverage files
        run: |
          cd coverages

          for coverage_dir in ./.coverage.*; do
              mv "$coverage_dir/.coverage" "../$coverage_dir"
              rmdir "$coverage_dir"
          done

          cd ..

      - name: Combine coverage
        run: |
          uv sync --frozen --only-group coverage

          coverage combine
          coverage xml
          coverage report

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v5

  linting:
    needs: [changes]
    if: ${{ needs.changes.outputs.source == 'true' || needs.changes.outputs.stubs == 'true' || github.event_name != 'pull_request' }}
    runs-on: windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup uv
        uses: astral-sh/setup-uv@v7
        with:
          python-version: "3.10"
          activate-environment: true
          enable-cache: true
          prune-cache: false

      - name: Install nox
        run: |
          uv sync --frozen --only-group nox

      - name: Check stubs
        if: always() && !cancelled()
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && -n "${{ github.base_ref }}" ]]; then
            git fetch origin ${{ github.base_ref }} --depth=1
            DIFF_TARGET="origin/${{ github.base_ref }}"
          else
            DIFF_TARGET="HEAD^"
          fi

          if git rev-parse "$DIFF_TARGET" >/dev/null 2>&1 && git diff --quiet "$DIFF_TARGET"...HEAD -- 'autocv/**/*.py'; then
            echo "Skipping stub generation; no Python changes under autocv/."
            exit 0
          fi

          nox -s generate-stubs
          if [ "$(git status --short)" ]; then
            echo "Stubs were not updated accordingly to the changes. Please run 'nox -s generate-stubs' and commit the changes to fix this."
            git status --short
            exit 1
          fi

      - name: Audit
        if: always() && !cancelled()
        run: |
          nox -s audit

      - name: Mypy
        if: always() && !cancelled()
        run: |
          nox -s mypy

      - name: Ruff
        if: always() && !cancelled()
        run: |
          nox -s ruff -- --output-format=github

      - name: Codespell
        if: always() && !cancelled()
        run: |
          nox -s codespell

      - name: Check trailing whitespaces
        if: always() && !cancelled()
        run: |
          nox -s check-trailing-whitespaces

  docs:
    needs: [changes]
    if: ${{ needs.changes.outputs.docs == 'true' || github.event_name != 'pull_request' }}
    runs-on: windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup uv
        uses: astral-sh/setup-uv@v7
        with:
          activate-environment: true
          python-version: 3.13
          enable-cache: true
          prune-cache: false

      - name: Install docs deps
        run: uv sync --frozen --only-group nox

      - name: Sphinx build
        run: |
          nox -s sphinx

      - name: Upload artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v5
        with:
          name: docs
          path: public/docs

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          publish_branch: docs
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: public/docs
          force_orphan: true

  auto-merge:
    needs: [upload-coverage, linting, docs]
    if: ${{ github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Upload artifacts
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Auto merge
        uses: ahmadnassri/action-dependabot-auto-merge@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  ci-done:
    needs: [upload-coverage, linting, docs]
    if: always() && !cancelled()
    runs-on: ubuntu-latest
    steps:
      - name: Set status based on required jobs
        env:
          RESULTS: ${{ join(needs.*.result, ' ') }}
        run: |
          for result in $RESULTS; do
            if [ "$result" != "success" ] && [ "$result" != "skipped" ]; then
              exit 1
            fi
          done
