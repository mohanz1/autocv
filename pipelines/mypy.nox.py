from __future__ import annotations

import pathlib

from pipelines import config, nox

STUBGEN_GENERATE = [
    "autocv/__init__.py",
    "autocv/core/__init__.py",
    "autocv/models/__init__.py",
    "autocv/utils/__init__.py",
]


@nox.session()
def mypy(session: nox.Session) -> None:
    """Perform static type analysis on Python source code using mypy."""
    nox.sync(session, self=True, groups=["mypy"])

    session.run("mypy", "-p", config.MAIN_PACKAGE, "--config", config.PYPROJECT_TOML)


@nox.session()
def generate_stubs(session: nox.Session) -> None:
    """Generate the stubs for the package."""
    nox.sync(session, groups=["mypy", "ruff"])

    session.run("stubgen", *STUBGEN_GENERATE, "-o", ".", "--include-private", "--no-import")

    stub_paths = [path + "i" for path in STUBGEN_GENERATE]

    # At the time of writing, sorting imports is not done when running formatting
    # and needs to be done with ruff check
    # see: https://docs.astral.sh/ruff/formatter/#sorting-imports
    session.run("ruff", "format", *stub_paths)
    session.run("ruff", "check", "--select", "I", "--fix", *stub_paths)

    for stub_path in stub_paths:
        path = pathlib.Path(stub_path)

        content = path.read_bytes()

        path.write_text(
            "# DO NOT MANUALLY EDIT THIS FILE!\n"
            "# This file was automatically generated by `nox -s generate-stubs`\n\n" + content.decode()
        )
